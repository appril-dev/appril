import { basename, resolve, join } from "node:path";

import { defineConfig } from "vite";

import { baseurl } from "./config";
import { distDir } from "../package.json";
import { devPort } from "./package.json";
import { compilerOptions } from "./tsconfig.json";

import plugins from "./vite.plugins";

export default defineConfig({

  base: join(baseurl, "/"),

  build: {
    outDir: resolve(import.meta.dirname, join("..", distDir, basename(import.meta.dirname))),
    emptyOutDir: true,
    sourcemap: true,
  },

  server: {
    host: true,
    port: devPort,
    strictPort: true,
    fs: {
      strict: false,
    },
  },

  cacheDir: resolve(import.meta.dirname, "var/.cache"),

  resolve: {
    alias: Object.entries(compilerOptions.paths).reduce(
      (map: Record<string, string>, [k, v]) => {
        map[k.replace("/*", "")] = resolve(import.meta.dirname, v[0].replace("/*", ""));
        return map;
      },
      {},
    ),
  },

  plugins,

})
