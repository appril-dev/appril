import api, {
  type DefaultState,
  type DefaultContext,
  type DefinitionI,
  type UseDefinitionI,
} from "@appril/api/router";

type DefaultParamsT = {{route.params.literal}};

export const use: UseDefinitionI<
  DefaultState,
  DefaultContext & { params: DefaultParamsT }
> = api.use;

type Factory<
  ParamsT,
  StateT = DefaultState,
  ContextT = DefaultContext & { params: ParamsT }
> = (
  a: { use: UseDefinitionI<StateT, ContextT> } & Record<
    {{#each apiMethods}}| "{{this}}"{{/each}},
    DefinitionI<StateT, ContextT>
  >
) => Array<any>;

export default <
  ParamsT extends DefaultParamsT = DefaultParamsT
>(
  factory: Factory<ParamsT>
) => factory(api);
