import dbx from "@appril/dbx";

import { connection } from "{{defaults.appPrefix}}/{{base}}/setup";

export type RecordT = import("{{defaults.appPrefix}}/{{base}}/{{table.schema}}/types").{{table.recordName}};
{{#if isTable}}
export type InsertT = import("{{defaults.appPrefix}}/{{base}}/{{table.schema}}/types").{{table.insertName}};
export type UpdateT = import("{{defaults.appPrefix}}/{{base}}/{{table.schema}}/types").{{table.updateName}};
{{/if}}
export type QueryT =  import("{{defaults.appPrefix}}/{{base}}/{{table.schema}}/types").{{table.queryBuilder}};

type ExtraMethod = (
  this: QueryT,
  ...a: Array<never>
) => QueryT | ExtraMethod;

export { connection };
export const tableName = "{{table.name}}";

export default <
  ExtraT = Record<string, ExtraMethod>
>(
  extra?: ExtraT,
) => {
  return dbx<
    "{{table.moduleName}}",
    {{#if table.primaryKey}}"{{table.primaryKey}}"{{else}}object{{/if}},
    ExtraT
  >({
    connection,
    tableName: "{{table.fullName}}",{{#if table.primaryKey}}
    primaryKey: "{{table.primaryKey}}",{{/if}}
  }, extra)
};
