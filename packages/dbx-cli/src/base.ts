import { resolve, dirname } from "node:path";

import fsx from "fs-extra";
import { type BuildOptions, build } from "esbuild";

import type { Config } from "./@types";

export * from "./@types";

export const BANNER = `/**
* @generated by @appril/dbx-cli; do not modify manually!
*/`;

export async function getEsbuildConfig(root: string): Promise<BuildOptions> {
  const config = await import(resolve(root, "esbuild.json"), {
    with: { type: "json" },
  });
  return config.default;
}

export async function getConfig(configFile: string): Promise<Config> {
  const root = dirname(configFile);

  const outfile = resolve(root, `${configFile}.${new Date().getTime()}.mjs`);

  const esbuildConfig = await getEsbuildConfig(root);

  await build({
    ...esbuildConfig,
    bundle: true,
    entryPoints: [configFile],
    outfile,
    sourcemap: false,
  });

  try {
    const config = await import(outfile);
    return config.default;
  } finally {
    await fsx.unlink(outfile);
  }
}

export function run(task: () => Promise<void>) {
  task()
    .then(() => process.exit(0))
    // biome-ignore lint:
    .catch((error: any) => {
      console.error(`\n  \x1b[31m√ó\x1b[0m ${error.message}\n`);
      console.error(error);
      process.exit(1);
    });
}
